---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-a
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpong-a
  namespace: pingpong-a
spec:
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong-a
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pingpong-a
    spec:
      containers:
        - name: pingpong-a
          image: kinnerakallam/esgbook:main-f4de6e
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: TARGET
              value: "http://pingponger-a.pingpong-a.svc.cluster.local:8080/ping"
          livenessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ping
              port: 8080
            initialDelaySeconds: 2
            periodSeconds: 5
            failureThreshold: 3
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "128Mi"
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pingpong-a-pdb
  namespace: pingpong-a
spec:
  minAvailable: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong-a
---
#metrics server needs to be installed for this.
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pingpong-a-hpa
  namespace: pingpong-a
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pingpong-a
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50
---
apiVersion: v1
kind: Service
metadata:
  name: pingponger-a
  namespace: pingpong-a
spec:
  selector:
    app.kubernetes.io/name: pingpong-a
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: pingpong-a-gateway
  namespace: pingpong-a
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "test.localdev.me" 
  - port:  
      number: 443  
      name: https  
      protocol: HTTPS  
    tls:  
      mode: SIMPLE  
      credentialName: httpbin-credential    
    hosts:  
    - "test.localdev.me"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: pingponger-a-vs
  namespace: pingpong-a
spec:
  hosts:
    - "test.localdev.me"
  gateways:
    - pingpong-a-gateway
  http:
    - match:
        - uri:
            prefix: /ping
      route:
        - destination:
            host: pingponger-a.pingpong-a.svc.cluster.local
            port:
              number: 8080
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: peer-auth-a
  namespace: istio-system
spec:
  mtls:
    mode: STRICT
---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-b
  labels:
    istio-injection: enabled
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pingpong-b
  namespace: pingpong-b
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: pingpong-b
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pingpong-b
    spec:
      containers:
        - name: pingpong-b
          image: kinnerakallam/esgbook:main-f4de6e
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: TARGET
              value: "http://pingponger-b.pingpong-b.svc.cluster.local:8080/ping"
---
apiVersion: v1
kind: Service
metadata:
  name: pingponger-b
  namespace: pingpong-b
spec:
  selector:
    app.kubernetes.io/name: pingpong-b
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: pingpong-b-gateway
  namespace: pingpong-b
spec:
  selector:
    istio: ingressgateway
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "test-b.localdev.me" 
  - port:  
      number: 443  
      name: https  
      protocol: HTTPS  
    tls:  
      mode: SIMPLE  
      credentialName: httpbin-credential    
    hosts:  
    - "test-b.localdev.me"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: pingponger-b-vs
  namespace: pingpong-b
spec:
  hosts:
    - "test-b.localdev.me"
  gateways:
    - pingpong-b-gateway
  http:
    - match:
        - uri:
            prefix: /ping
      route:
        - destination:
            host: pingponger-b.pingpong-b.svc.cluster.local
            port:
              number: 8080
---
apiVersion: security.istio.io/v1beta1
kind: PeerAuthentication
metadata:
  name: peer-auth-b
  namespace: pingpong-b
spec:
  mtls:
    mode: STRICT
---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-c
  # labels:
  #   istio-injection: enabled
---
apiVersion: v1
kind: Pod
metadata:
  name: curlpod
  namespace: pingpong-c
  labels:
    app: curlpod
spec:
  containers:
    - name: curl
      image: curlimages/curl:latest
      command: ["/bin/sh", "-c", "sleep infinity"]
      resources:
        limits:
          cpu: "100m"
          memory: "128Mi"
        requests:
          cpu: "50m"
          memory: "64Mi"
---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-d
  labels:
    pod-security.kubernetes.io/enforce: restricted
---
apiVersion: v1
kind: Pod
metadata:
  name: privileged-pod
  namespace: pingpong-d
spec:
  containers:
    - name: nginx
      image: nginx
      securityContext:
        privileged: true
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: deny-all
  namespace: pingpong-e
spec:
  podSelector: { } #caution: always use a selector, this can break connectivity for all pods
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: v1
kind: Namespace
metadata:
  name: pingpong-e
